server {
	listen       80;
	server_name  danglinsheng.yes.heyi.test;

	access_log  logs/dark.access.log  dark;

	location /get-stockinfo {
                default_type text/html;
                content_by_lua_block {
			local stock = require "stock"
			stock.stock_server()
                }
		log_by_lua_block {
		}
        }

	location /sync-stockinfo {
		default_type text/html;
                content_by_lua_block {
                        local center = require "center"
                        center.stock_sync()
                }
                log_by_lua_block {
                }
	}


	location /ok {
		default_type text/html;
		content_by_lua_block {
			local s = require "core.dark"
			s.server()
		}
	}

	location /welcome {
		default_type text/html;
 		content_by_lua_block {
			local dark = require("core.dark")
			local welcome = dark.welcome
			welcome("hello world!\n")
			--ngx.sleep(5)
			--os.execute("sleep " .. 5)
			ngx.eof()
			--os.execute("sleep " .. 5)
			--ngx.sleep(3)
			ngx.sleep(5)
		}
	}


	location /p {
		access_log logs/t.access.log dark;
		proxy_set_header X-real-ip $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_pass_request_headers on;
		proxy_connect_timeout 2ms;
		proxy_read_timeout 42ms;
		proxy_send_timeout 2ms;
		proxy_pass http://mdispatcher.yes.heyi.test;
	}


	location /t {
		default_type text/html;
 		content_by_lua_block {
  			ngx.print('t server http in content: ' .. ngx.time());
 		}

		log_by_lua_block {
			local log_dict = ngx.shared.log_dict
			log_dict:set("time",ngx.time()) 
			local t = log_dict:get("time")
			ngx.log(ngx.ERR, "LogTime:" .. t)

		  	local f = io.open("/tmp/t.txt", "a")
		  	f:write(ngx.time() .. "\n")
		  	f:close()
		}
	}

	location / {
		root   html;
		index  index.html index.htm;
	}
}
